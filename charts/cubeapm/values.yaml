# Global override values
global:
  # -- Overrides the Image registry globally
  imageRegistry: &GLOBAL_IMAGE_REGISTRY null
  # -- Global Image Pull Secrets
  imagePullSecrets: []
  # -- Overrides the storage class for all PVC with persistence enabled.
  # If not set, the default storage class is used.
  # If set to "-", storageClassName: "", which disables dynamic provisioning
  storageClass: null
  # -- Kubernetes cluster cloud provider.
  # example: `aws`, `azure`, `gcp`, `other`
  # Based on the cloud, storage class for the persistent volume is selected.
  # When set to 'aws' or 'gcp' along with `installCustomStorageClass` enabled,
  # then new expandible storage class is created.
  cloud: other

# -- CubeAPM chart name override
nameOverride: ""

# -- CubeAPM chart full name override
fullnameOverride: ""

# -- Image Registry Secret Names for all CubeAPM components.
# If global.imagePullSecrets is set as well, it will be merged.
imagePullSecrets: []

# -- When the `installCustomStorageClass` is enabled with `cloud` set as `gcp`
# or `aws`. It creates custom storage class with volume expansion permission.
installCustomStorageClass: false

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

priorityClassName: ""
nodeSelector: {}
affinity: {}
tolerations: []
topologySpreadConstraints: []
podSecurityContext: {}

securityContext: {}
# -- Configure resource requests and limits. Update according to your workload.
# Ref: http://kubernetes.io/docs/user-guide/compute-resources/
resources: {}

image:
  registry: docker.io
  repository: cubeapm/cubeapm
  tag: v1.8.0
  pullPolicy: IfNotPresent

configVars:
  # -- [Required] URL used by users to access Cube APM. This is used to generate URLs in emails and alerts.
  # If you use reverse proxy and sub path specify full url (with sub path).
  # Examples: http://cube.yourdomain.com, https://yourdomain.com/cube, http://10.0.0.1:3125
  baseUrl: https://cubeapm.yourdomain.com
  database:
    # -- [Required] URL of database for storing config data (settings, dashboards, etc.)
    # Example:
    #  mysql://<username>:<password>@tcp(<host>:3306)/<db_name>
    #  postgres://<username>:<password>@<host>:5432/<db_name>?sslmode=disable
    url: ""
  # -- Tag name for environment.
  # If set, the value of this tag in traces and metrics will be
  # used as the value of env label in metrics.
  envTag: ""
  # -- Minimal allowed log Level.
  # Supported values are debug, info, warn, and error.
  logLevel: "warn"
  # -- (string) Delay before shutdown. During this delay, health check returns
  # non-OK responses so load balancers can route new requests to other servers.
  shutdownDelay: 0
  smtp:
    # -- Email address of sender. Your SMTP server must be
    # configured to allow sending emails from this address.
    from: ""
    # -- [Required] URL of SMTP server for sending emails, e.g., reset password email, alert notifications.
    # Example:
    #  smtp://<username>:<password>@<mailserver>:25/?disable_starttls=false
    url: ""
  # -- Timezone of CubeAPM users. While most of the timezone related operations are done on the browser
  # using browser's time zone setting, a few operations need to be performed on the server and they use
  # this setting.
  # Examples: America/Los_Angeles, Asia/Kolkata, UTC
  timeZone: UTC
  # -- [Required] Account token obtained from CubeAPM. This token is used for authentication with CubeAPM.
  token: ""

  alertmanager:
    charts:
      # -- Disable charts in alert notifications
      disable: false
    oauth:
      pagerduty:
        # -- App ID for sending alert notifications on PagerDuty.
        # Refer https://docs.cubeapm.com/install/configure-cubeapm/connect-with-pagerduty-for-alerting for guidance.
        appId: ""
      slack:
        # -- Bot user OAuth token for sending alert notifications on Slack.
        # Slack bot tokens start with 'xoxb'.
        # Refer https://docs.cubeapm.com/install/configure-cubeapm/connect-with-slack-for-alerting for guidance.
        token: ""

  auth:
    database:
      # -- [Required] URL of database for storing user accounts data
      # Example:
      #  mysql://<username>:<password>@tcp(<host>:3306)/<db_name>
      #  postgres://<username>:<password>@<host>:5432/<db_name>?sslmode=disable
      url: ""
    key:
      # -- [Required] Encryption key for session data. Must be 32 characters long.
      # Can use hex encoded UUID without dashes.
      session: ""
      # -- [Required] Encryption key for tokens. Must be 32 characters long.
      # Can use hex encoded UUID without dashes.
      tokens: ""
    oidc:
      github:
        # -- Client ID for Sign in with GitHub.
        # Refer https://docs.cubeapm.com/install/configure-cubeapm/sign-in-with-github for guidance.
        clientId: ""
        # -- Client secret for Sign in with GitHub
        clientSecret: ""
      google:
        # -- Client ID for Sign in with Google.
        # Refer https://docs.cubeapm.com/install/configure-cubeapm/sign-in-with-google for guidance.
        clientId: ""
        # -- Client secret for Sign in with Google
        clientSecret: ""
    # -- Comma separated list of email ids of users to be given sysadmin privilege.
    sysAdmins: ""

    # -- Default role to be assigned to a new user on signup.
    # Possible values are none, viewer, editor, admin.
    defaultRole: viewer

  metrics:
    # -- Metrics retention period. Must be between 24h0m0s and 1440h0m0s.
    retention: 720h
    # -- Metrics update interval. Must be between 500ms and 1m0s.
    updateInterval: 15s
    # -- Config for extending CubeAPM metrics with custom labels.
    # See `values.yaml` for an example.
    customLabelsConfigFile: {}
      # custom_labels:
      #   http_response_code:
      #     filters:
      #       - label: span_kind
      #         match: server
      #     value:
      #       tag: http.status_code
      #       match: '(\d)\d{2}'
      #       replace: '${1}xx'
    slo:
      # -- Config for SLOs (Service Level Objectives).
      # See `values.yaml` for an example.
      configFile: {}
        # slos:
        #   default:
        #     error_budget_percent: 0.5
        #     latency_threshold: 75ms
        #     latency_budget_percent: 5

  tracegen:
    # -- Disable the built-in demo trace generator
    disable: false

  traces:
    # -- Traces retention period. Must be between 1h0m0s and 720h0m0s.
    retention: 72h
    # -- Config for creating custom indexes on traces.
    # See `values.yaml` for an example.
    customIndexesConfigFile: {}
    # custom_indexes:
    #   http_response_code_4xx:
    #     filters:
    #       - label: span_kind
    #         match: server
    #       - label: http.status_code
    #         match: '4\d{2}'

# -- Environment variables to be passed to CubeAPM containers.
# Example:
#   - name: ENV_VARIABLE_NAME
#     value: "env_variable_value"
extraEnvs: []

service:
  # -- Annotations to CubeAPM service
  annotations: {}
  # -- Service type
  type: ClusterIP
  # -- HTTP port
  port: 3125
  # -- Port to use for internal http communication between CubeAPM nodes
  internalPort: 3130

ingress:
  # -- Enable ingress for CubeAPM
  enabled: true
  # -- Ingress Class Name to be used to identify ingress controllers
  className: ""
  # -- Annotations to CubeAPM Ingress
  annotations: {}
  # -- CubeAPM Ingress Host names with their path details
  hosts:
    - host: cubeapm.yourdomain.com
      paths:
        - path: /
          pathType: ImplementationSpecific
  # -- CubeAPM Ingress TLS
  tls: []

# https://github.com/kubernetes-sigs/aws-load-balancer-controller
# It satisfies Kubernetes Ingress resources by provisioning Application Load Balancers.
# It satisfies Kubernetes Service resources by provisioning Network Load Balancers.
serviceTraces:
  # -- Set up a Network Load Balancer for ingesting metrics and traces into
  # CubeAPM from outside of k8s over TCP.
  enabled: false
  # -- Annotations to CubeAPM service
  annotations: {}
  # -- Service type
  type: LoadBalancer

ingressTraces:
  grpc:
    # -- Enable ingress for ingesting traces into CubeAPM from outside of k8s over gRPC.
    # Services that need to send traces data to CubeAPM can either use
    # <cubeapm_service_name>.<namespace>.svc.cluster.local:4317 as the endpoint
    # (in which case this ingress is not needed) or they can use the host:port
    # configured in this ingress. If TLS support is required, then this ingress
    # will have to be used as CubeAPM does not handle TLS by itself.
    #
    # Note that this ingress must be configured to use GRPC protocol for
    # forwarding traffic to the service. For kubernetes nginx ingress
    # controller, this can be achieved by setting the annotation
    # nginx.ingress.kubernetes.io/backend-protocol: GRPC
    #
    # Note also that this ingress may not work properly without TLS, depending
    # on the ingress controller being used (e.g. nginx).
    enabled: false
    # -- Ingress Class Name to be used to identify ingress controllers
    className: ""
    # -- Annotations to the ingress
    annotations: {}
    # -- Ingress Host names with their path details
    hosts:
      - host: cubeapm-traces-grpc.yourdomain.com
        paths:
          - path: /
            pathType: ImplementationSpecific
    # -- Ingress TLS
    tls: []
  http:
    # -- Enable ingress for ingesting traces into CubeAPM from outside of k8s over HTTP.
    # Services that need to send traces data to CubeAPM can either use
    # <cubeapm_service_name>.<namespace>.svc.cluster.local:4318 as the endpoint
    # (in which case this ingress is not needed) or they can use the host:port
    # configured in this ingress. If TLS support is required, then this ingress
    # will have to be used as CubeAPM does not handle TLS by itself.
    enabled: false
    # -- Ingress Class Name to be used to identify ingress controllers
    className: ""
    # -- Annotations to the ingress
    annotations: {}
    # -- Ingress Host names with their path details
    hosts:
      - host: cubeapm-traces-http.yourdomain.com
        paths:
          - path: /
            pathType: ImplementationSpecific
    # -- Ingress TLS
    tls: []
  metrics:
    # -- Enable ingress for ingesting metrics into CubeAPM from outside of k8s over HTTP.
    # Services that need to send metrics data to CubeAPM can either use
    # <cubeapm_service_name>.<namespace>.svc.cluster.local:3030 as the endpoint
    # (in which case this ingress is not needed) or they can use the host:port
    # configured in this ingress. If TLS support is required, then this ingress
    # will have to be used as CubeAPM does not handle TLS by itself.
    enabled: false
    # -- Ingress Class Name to be used to identify ingress controllers
    className: ""
    # -- Annotations to the ingress
    annotations: {}
    # -- Ingress Host names with their path details
    hosts:
      - host: cubeapm-metrics.yourdomain.com
        paths:
          - path: /
            pathType: ImplementationSpecific
    # -- Ingress TLS
    tls: []

persistence:
  # -- Enable data persistence using PVC. If not enabled, data is stored in an emptyDir.
  enabled: true
  # -- Name of an existing PVC to use (only when deploying a single pod)
  existingClaim: ""
  # -- Persistent Volume Storage Class to use.
  # If defined, `storageClassName: <storageClass>`.
  # If set to "-", `storageClassName: ""`, which disables dynamic provisioning
  # If undefined (the default) or set to `null`, no storageClassName spec is
  # set, choosing the default provisioner.
  storageClass: null
  # -- Access Modes for persistent volume
  accessModes:
    - ReadWriteOnce
  # -- Persistent Volume size
  size: 50Gi

collector:
  otlp:
    grpc:
      # -- Disable OTLP grpc receiver
      disable: false
      # -- Port to bind OTLP grpc receiver on
      port: 4317
    http:
      # -- Disable OTLP http receiver
      disable: false
      # -- Port to bind OTLP http receiver on
      port: 4318
      cors:
        # -- Comma separated list of allowed origins for CORS requests.
        # Examples: "http://*.domain.com", "*"
        origins: ""

cluster:
  # -- Number of pods in the cluster
  podCount: 3
  # -- (int) Replication factor for the ingested data.
  # Default is size_of_cluster/2 + 1
  replicationFactor: null
  advertise:
    # -- Explicit address to advertise in cluster, e.g. 10.0.0.1.
    # If not specified, CubeAPM will try to detect the address automatically.
    address: ""
    # -- By default, CubeAPM only uses private IP address as the advertise
    # address. Set this flag to true to allow public IP addresses to be used.
    allowInsecure: false
  port:
    # -- Port to use for internal distribution of incoming traces data
    distributor: 3126
    # -- Port to use for internal exchange of data between nodes
    # for serving read requests
    read: 3127
    # -- Port to use for internal exchange of data between nodes
    # for serving write requests
    write: 3128
    # -- Port to use for internal exchange of data between nodes
    # for maintaining cluster state
    state: 3129
