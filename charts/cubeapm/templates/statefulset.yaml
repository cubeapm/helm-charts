apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "cubeapm.fullname" . }}
  labels:
    {{- include "cubeapm.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "cubeapm.fullname" . | trunc 54 | trimSuffix "-" }}-headless
  replicas: {{ .Values.cluster.podCount }}
  selector:
    matchLabels:
      {{- include "cubeapm.selectorLabels" . | nindent 6 }}
  # minReadySeconds: 10
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
        {{- include "cubeapm.selectorLabels" . | nindent 8 }}
        {{- with .Values.podCustomLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- include "cubeapm.imagePullSecrets" . }}
      serviceAccountName: {{ include "cubeapm.serviceAccountName" . }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ include "cubeapm.fullname" . }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ template "cubeapm.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "--data-dir=/var/lib/cubeapm/data"
            {{- if .Values.configVars.alerts.configFile }}
            - "--alerts.config-file=/etc/cubeapm/alerts.yml"
            {{- end }}
            {{- if .Values.configVars.metrics.customLabelsConfigFile }}
            - "--metrics.custom-labels-config-file=/etc/cubeapm/metrics.yml"
            {{- end }}
            {{- if .Values.configVars.traces.customIndexesConfigFile }}
            - "--traces.custom-indexes-config-file=/etc/cubeapm/traces.yml"
            {{- end }}
            {{- if .Values.configVars.metrics.slo.configFile }}
            - "--metrics.slo.config-file=/etc/cubeapm/slo.yml"
            {{- end }}
            {{- if .Values.collector.spanTransformsConfigFile }}
            - "--collector.span-transforms-config-file=/etc/cubeapm/span_transforms.yml"
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
            - name: http-internal
              containerPort: {{ .Values.service.internalPort }}
              protocol: TCP
            {{- if gt (int .Values.cluster.podCount) 1 }}
            - name: cluster-dist
              containerPort: {{ .Values.cluster.port.distributor }}
              protocol: TCP
            - name: cluster-read
              containerPort: {{ .Values.cluster.port.read }}
              protocol: TCP
            - name: cluster-write
              containerPort: {{ .Values.cluster.port.write }}
              protocol: TCP
            - name: cluster-state-t
              containerPort: {{ .Values.cluster.port.state }}
              protocol: TCP
            - name: cluster-state-u
              containerPort: {{ .Values.cluster.port.state }}
              protocol: UDP
            {{- end }}
            {{- if not .Values.collector.otlp.grpc.disable }}
            - name: otlp-grpc
              containerPort: {{ .Values.collector.otlp.grpc.port }}
              protocol: TCP
            {{- end }}
            {{- if not .Values.collector.otlp.http.disable }}
            - name: otlp-http
              containerPort: {{ .Values.collector.otlp.http.port }}
              protocol: TCP
            {{- end }}
            {{- if not .Values.collector.nr8t.disable }}
            - name: nr8t
              containerPort: {{ .Values.collector.nr8t.port }}
              protocol: TCP
            {{- end }}
          env:
            # {{- range $host := .Values.ingress.hosts }}
            # {{- range .paths }}
            # http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
            # {{- end }}
            # {{- end }}
            - name: CUBE_TOKEN
              value: {{ required "A valid configVars.token is required!" .Values.configVars.token }}
            - name: CUBE_BASE_URL
              value: {{ required "A valid configVars.baseUrl is required!" .Values.configVars.baseUrl }}
            - name: CUBE_DATABASE_URL
              value: {{ required "A valid configVars.database.url is required!" .Values.configVars.database.url }}
            {{- if .Values.configVars.envTag }}
            - name: CUBE_ENV_TAG
              value: {{ .Values.configVars.envTag }}
            {{- end }}
            - name: CUBE_HTTP_PORT
              value: {{ .Values.service.port | quote }}
            - name: CUBE_HTTP_PORT_INTERNAL
              value: {{ .Values.service.internalPort | quote }}
            - name: CUBE_LOG_LEVEL
              value: {{ .Values.configVars.logLevel }}
            - name: CUBE_SHUTDOWN_DELAY
              value: {{ .Values.configVars.shutdownDelay | quote }}
            {{- if .Values.configVars.smtp.from }}
            - name: CUBE_SMTP_FROM
              value: {{ .Values.configVars.smtp.from }}
            {{- end }}
            {{- if .Values.configVars.smtp.url }}
            - name: CUBE_SMTP_URL
              value: {{ .Values.configVars.smtp.url }}
            {{- end }}
            - name: CUBE_TIME_ZONE
              value: {{ .Values.configVars.timeZone }}
            {{- if .Values.configVars.alertmanager.charts.disable }}
            - name: CUBE_ALERTMANAGER_CHARTS_DISABLE
              value: "true"
            {{- end }}
            - name: CUBE_ALERTMANAGER_OAUTH_PAGERDUTY_APP_ID
              value: {{ .Values.configVars.alertmanager.oauth.pagerduty.appId }}
            - name: CUBE_ALERTMANAGER_OAUTH_SLACK_TOKEN
              value: {{ .Values.configVars.alertmanager.oauth.slack.token }}
            - name: CUBE_AUTH_DATABASE_URL
              value: {{ required "A valid configVars.auth.database.url is required!" .Values.configVars.auth.database.url }}
            - name: CUBE_AUTH_KEY_SESSION
              value: {{ required "A valid configVars.auth.key.session is required!" .Values.configVars.auth.key.session }}
            - name: CUBE_AUTH_KEY_TOKENS
              value: {{ required "A valid configVars.auth.key.tokens is required!" .Values.configVars.auth.key.tokens }}
            {{- if or .Values.configVars.auth.oidc.github.clientId .Values.configVars.auth.oidc.github.clientSecret }}
            - name: CUBE_AUTH_OIDC_GITHUB_CLIENT_ID
              value: {{ required "A valid configVars.auth.oidc.github.clientId is also required if configVars.auth.oidc.github.clientSecret is set!" .Values.configVars.auth.oidc.github.clientId }}
            - name: CUBE_AUTH_OIDC_GITHUB_CLIENT_SECRET
              value: {{ required "A valid configVars.auth.oidc.github.clientSecret is also required if configVars.auth.oidc.github.clientId is set!" .Values.configVars.auth.oidc.github.clientSecret }}
            {{- end }}
            {{- if or .Values.configVars.auth.oidc.google.clientId .Values.configVars.auth.oidc.google.clientSecret }}
            - name: CUBE_AUTH_OIDC_GOOGLE_CLIENT_ID
              value: {{ required "A valid configVars.auth.oidc.google.clientId is also required if configVars.auth.oidc.google.clientSecret is set!" .Values.configVars.auth.oidc.google.clientId }}
            - name: CUBE_AUTH_OIDC_GOOGLE_CLIENT_SECRET
              value: {{ required "A valid configVars.auth.oidc.google.clientSecret is also required if configVars.auth.oidc.google.clientId is set!" .Values.configVars.auth.oidc.google.clientSecret }}
            {{- end }}
            - name: CUBE_AUTH_SYS_ADMINS
              value: {{ .Values.configVars.auth.sysAdmins }}
            - name: CUBE_AUTH_DEFAULT_ROLE
              value: {{ .Values.configVars.auth.defaultRole }}
            {{- if .Values.configVars.auth.cookie.insecure }}
            - name: CUBE_AUTH_COOKIE_INSECURE
              value: "true"
            {{- end }}
            {{- if and (gt (int .Values.cluster.podCount) 1) (.Values.cluster.replicationFactor) }}
            - name: CUBE_CLUSTER_REPLICATION_FACTOR
              value: {{ .Values.cluster.replicationFactor | quote }}
            - name: CUBE_CLUSTER_ADVERTISE_ADDRESS
              # value: $(POD_IP)
              value: {{ .Values.cluster.advertise.address }}
            {{- if .Values.cluster.advertise.allowInsecure }}
            - name: CUBE_CLUSTER_ALLOW_INSECURE_ADVERTISE
              value: "true"
            {{- end }}
            {{- $list := list }}
            {{- $fullName := include "cubeapm.fullname" . }}
            {{- range $i := until (int .Values.cluster.podCount) }}
            {{- $list = append $list (printf "%s-%d.%s-headless" ($fullName) ($i) ($fullName | trunc 54 | trimSuffix "-")) }}
            {{- end }}
            - name: CUBE_CLUSTER_PEERS
              value: {{ join "," $list }}
            {{- end }}
            - name: CUBE_CLUSTER_PORT_DISTRIBUTOR
              value: {{ .Values.cluster.port.distributor | quote }}
            - name: CUBE_CLUSTER_PORT_READ
              value: {{ .Values.cluster.port.read | quote }}
            - name: CUBE_CLUSTER_PORT_WRITE
              value: {{ .Values.cluster.port.write | quote }}
            - name: CUBE_CLUSTER_PORT_STATE
              value: {{ .Values.cluster.port.state | quote }}
            {{- if .Values.collector.envTag }}
            {{- fail "collector.envTag is deprecated. Please use configVars.envTag instead." }}
            {{- end }}
            {{- if .Values.collector.otlp.grpc.disable }}
            - name: CUBE_COLLECTOR_OTLP_GRPC_DISABLE
              value: "true"
            {{- else }}
            - name: CUBE_COLLECTOR_OTLP_GRPC_PORT
              value: {{ .Values.collector.otlp.grpc.port | quote }}
            {{- end }}
            {{- if .Values.collector.otlp.http.disable }}
            - name: CUBE_COLLECTOR_OTLP_HTTP_DISABLE
              value: "true"
            {{- else }}
            - name: CUBE_COLLECTOR_OTLP_HTTP_PORT
              value: {{ .Values.collector.otlp.http.port | quote }}
            - name: CUBE_COLLECTOR_OTLP_HTTP_CORS_ORIGINS
              value: {{ .Values.collector.otlp.http.cors.origins }}
            {{- end }}
            {{- if .Values.collector.nr8t.disable }}
            - name: CUBE_COLLECTOR_NR_8T_DISABLE
              value: "true"
            {{- else }}
            - name: CUBE_COLLECTOR_NR_8T_PORT
              value: {{ .Values.collector.nr8t.port | quote }}
            {{- end }}
            - name: CUBE_FILES_RETENTION
              value: {{ .Values.configVars.files.retention }}
            - name: CUBE_LOGS_RETENTION
              value: {{ .Values.configVars.logs.retention }}
            - name: CUBE_METRICS_RETENTION
              value: {{ .Values.configVars.metrics.retention }}
            - name: CUBE_METRICS_UPDATE_INTERVAL
              value: {{ .Values.configVars.metrics.updateInterval }}
            {{- if .Values.configVars.tracegen.disable }}
            - name: CUBE_TRACEGEN_DISABLE
              value: "true"
            {{- end }}
            - name: CUBE_TRACES_RETENTION
              value: {{ .Values.configVars.traces.retention }}
            - name: CUBE_TRACES_SLOW_QUERY_THRESHOLD
              value: {{ .Values.configVars.traces.slowQueryThreshold }}
            # add extraEnvs
            {{- with .Values.extraEnvs }}
            {{- . | toYaml | nindent 12 }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          volumeMounts:
            - name: config
              mountPath: /etc/cubeapm
          {{- if .Values.persistence.enabled }}
          {{- if .Values.persistence.existingClaim }}
            - name: cubeapm-data-existing-claim
          {{- else }}
            - name: cubeapm-data
          {{- end }}
          {{- else }}
            - name: cubeapm-data-volume
          {{- end }}
              mountPath: /var/lib/cubeapm/data
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: config
          configMap:
            name: {{ include "cubeapm.fullname" . }}
      {{- if (not .Values.persistence.enabled) }}
        - name: cubeapm-data-volume
          emptyDir: {}
      {{- else if .Values.persistence.existingClaim }}
        - name: cubeapm-data-existing-claim
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
      {{- end }}

{{- if and (.Values.persistence.enabled) (not .Values.persistence.existingClaim) }}
  volumeClaimTemplates:
    - metadata:
        name: cubeapm-data
      spec:
        accessModes:
          {{- toYaml .Values.persistence.accessModes | nindent 10 }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
      {{- $storageClass := default .Values.persistence.storageClass .Values.global.storageClass -}}
      {{- if $storageClass -}}
      {{- if (eq "-" $storageClass) }}
        storageClassName: ""
      {{- else }}
        storageClassName: {{ $storageClass }}
      {{- end }}
      {{- end }}
{{- end }}
