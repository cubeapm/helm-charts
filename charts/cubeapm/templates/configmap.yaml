apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "cubeapm.fullname" . }}
data:
  config.properties: |
    # CubeAPM Configuration Properties
    # Sensitive values are left empty and can be populated via secrets
    
    # Basic Configuration
    baseUrl={{ .Values.configVars.baseUrl }}
    envTag={{ .Values.configVars.envTag | default "" }}
    logLevel={{ .Values.configVars.logLevel }}
    shutdownDelay={{ .Values.configVars.shutdownDelay }}
    timeZone={{ .Values.configVars.timeZone }}
    
    # Database Configuration
    database.url={{ .Values.configVars.database.url }}
    
    # SMTP Configuration
    {{- if or .Values.configVars.smtp.from .Values.configVars.smtp.url }}
    smtp.from={{ required "A valid configVars.smtp.from is also required if configVars.smtp.url is set!" .Values.configVars.smtp.from }}
    smtp.url={{ required "A valid configVars.smtp.url is also required if configVars.smtp.from is set!" .Values.configVars.smtp.url }}
    {{- end }}
    
    # Alert Manager Configuration
    alertmanager.charts.disable={{ .Values.configVars.alertmanager.charts.disable | default false }}
    alertmanager.jira.siteName={{ .Values.configVars.alertmanager.jira.siteName | default "" }}
    alertmanager.jira.token={{ .Values.configVars.alertmanager.jira.token | default "" }}
    alertmanager.jira.tokenExpiryDate={{ .Values.configVars.alertmanager.jira.tokenExpiryDate | default "" }}
    alertmanager.jira.userEmail={{ .Values.configVars.alertmanager.jira.userEmail | default "" }}
    alertmanager.oauth.pagerduty.appId={{ .Values.configVars.alertmanager.oauth.pagerduty.appId | default "" }}
    alertmanager.oauth.slack.token={{ .Values.configVars.alertmanager.oauth.slack.token | default "" }}
    alertmanager.opsgenie.tokens={{ .Values.configVars.alertmanager.opsgenie.tokens | default "" }}
    
    # Authentication Configuration
    auth.database.url={{ .Values.configVars.auth.database.url | default "" }}
    auth.key.session={{ .Values.configVars.auth.key.session }}
    {{- if or .Values.configVars.auth.oidc.github.clientId .Values.configVars.auth.oidc.github.clientSecret }}
    auth.oidc.github.clientId={{ required "A valid configVars.auth.oidc.github.clientId is also required if configVars.auth.oidc.github.clientSecret is set!" .Values.configVars.auth.oidc.github.clientId }}
    auth.oidc.github.clientSecret={{ required "A valid configVars.auth.oidc.github.clientSecret is also required if configVars.auth.oidc.github.clientId is set!" .Values.configVars.auth.oidc.github.clientSecret }}
    {{- end }}
    {{- if or .Values.configVars.auth.oidc.google.clientId .Values.configVars.auth.oidc.google.clientSecret }}
    auth.oidc.google.clientId={{ required "A valid configVars.auth.oidc.google.clientId is also required if configVars.auth.oidc.google.clientSecret is set!" .Values.configVars.auth.oidc.google.clientId }}
    auth.oidc.google.clientSecret={{ required "A valid configVars.auth.oidc.google.clientSecret is also required if configVars.auth.oidc.google.clientId is set!" .Values.configVars.auth.oidc.google.clientSecret }}
    {{- end }}

    auth.session.lifespan={{ .Values.configVars.auth.session.lifespan | default "24h" }}
    auth.sysAdmins={{ .Values.configVars.auth.sysAdmins | default "" }}
    auth.defaultRole={{ .Values.configVars.auth.defaultRole }}
    
    # Cluster Configuration
    cluster.replicationFactor={{ .Values.cluster.replicationFactor | default 0 }}
    cluster.advertise.address={{ .Values.cluster.advertise.address | default "" }}
    cluster.advertise.allowInsecure={{ .Values.cluster.advertise.allowInsecure | default false }}
    cluster.port.distributor={{ .Values.cluster.port.distributor }}
    cluster.port.read={{ .Values.cluster.port.read }}
    cluster.port.write={{ .Values.cluster.port.write }}
    cluster.port.state={{ .Values.cluster.port.state }}
    {{- if gt (int .Values.cluster.podCount) 1 }}
    {{- $list := list }}
    {{- $fullName := include "cubeapm.fullname" . }}
    {{- range $i := until (int .Values.cluster.podCount) }}
    {{- $list = append $list (printf "%s-%d.%s-headless" ($fullName) ($i) ($fullName | trunc 54 | trimSuffix "-")) }}
    {{- end }}
    cluster.peers={{ join "," $list }}
    {{- end }}
    {{- if .Values.collector.envTag }}
    {{- fail "collector.envTag is deprecated. Please use configVars.envTag instead." }}
    {{- end }}
    
    # Collector Configuration
    {{- if .Values.collector.otlp.grpc.disable }}
    collector.otlp.grpc-disable=true
    {{- else }}
    collector.otlp.grpc-host=0.0.0.0
    collector.otlp.grpc-port={{ .Values.collector.otlp.grpc.port | default 4317 }}
    {{- end }}
    {{- if .Values.collector.otlp.http.disable }}
    collector.otlp.http-disable=true
    {{- else }}
    collector.otlp.http-host=0.0.0.0
    collector.otlp.http-port={{ .Values.collector.otlp.http.port | default 4318 }}
    collector.otlp.http.cors.origins={{ .Values.collector.otlp.http.cors.origins | default "*" }}
    {{- end }}
    {{- if .Values.collector.nr8t.disable }}
    collector.nr8t.disable=true
    {{- else }}
    collector.nr8t.port={{ .Values.collector.nr8t.port | default 3124 }}
    {{- end }}
    
    # Retention Configuration
    files.retention={{ .Values.configVars.files.retention | default "720h" }}
    logs.retention={{ .Values.configVars.logs.retention | default "24h" }}
    {{- if .Values.configVars.logs.backup.destination }}
    logs.backup.destination={{ .Values.configVars.logs.backup.destination }}
    logs.backup.concurrency={{ .Values.configVars.logs.backup.concurrency | default 0 }}
    logs.backup.s3.customEndpoint={{ .Values.configVars.logs.backup.s3.customEndpoint | default "" }}
    {{- if .Values.configVars.logs.backup.s3.forcePathStyle }}
    logs.backup.s3.forcePathStyle=true
    {{- end }}
    logs.backup.s3.storageClass={{ .Values.configVars.logs.backup.s3.storageClass | default "" }}
    {{- end }}
    logs.datadog.streamFields={{ .Values.configVars.logs.datadog.streamFields | default "" }}
    logs.datadog.ignoreFields={{ .Values.configVars.logs.datadog.ignoreFields | default "" }}
    logs.newrelic.streamFields={{ .Values.configVars.logs.newrelic.streamFields | default "" }}
    logs.newrelic.ignoreFields={{ .Values.configVars.logs.newrelic.ignoreFields | default "" }}
    metrics.retention={{ .Values.configVars.metrics.retention | default "720h" }}
    metrics.updateInterval={{ .Values.configVars.metrics.updateInterval }}
    traces.retention={{ .Values.configVars.traces.retention | default "72h" }}
    traces.slowQueryThreshold={{ .Values.configVars.traces.slowQueryThreshold }}
    
    # Tracegen Configuration
    tracegen.disable={{ .Values.configVars.tracegen.disable | default false }}
    
    # Service Configuration
    http-port={{ .Values.service.port }}
    http-port-internal={{ .Values.service.internalPort }}
    service.admin.enabled={{ .Values.service.admin.enabled | default false }}
    {{- if .Values.service.admin.enabled }}
    http-host-admin="0.0.0.0"
    http-port-admin={{ .Values.service.admin.port | default 3199 }}
    http-token-admin={{ .Values.service.admin.token }}
    {{- end }}
    
    # Token (will be populated via secret)
    token={{ .Values.configVars.token }}
    
  {{- if .Values.configVars.alerts.configFile }}
  alerts.yml: |
    {{- toYaml .Values.configVars.alerts.configFile | nindent 4 }}
  {{- end }}
  {{- if .Values.configVars.metrics.customLabelsConfigFile }}
  metrics.yml: |
    {{- toYaml .Values.configVars.metrics.customLabelsConfigFile | nindent 4 }}
  {{- end }}
  {{- if .Values.configVars.traces.customIndexesConfigFile }}
  traces.yml: |
    {{- toYaml .Values.configVars.traces.customIndexesConfigFile | nindent 4 }}
  {{- end }}
  {{- if .Values.configVars.metrics.slo.configFile }}
  slo.yml: |
    {{- toYaml .Values.configVars.metrics.slo.configFile | nindent 4 }}
  {{- end }}
  {{- if .Values.collector.spanTransformsConfigFile }}
  span_transforms.yml: |
    {{- toYaml .Values.collector.spanTransformsConfigFile | nindent 4 }}
  {{- end }}
